scope: patroni
namespace: /service/

restapi:
  listen: 127.0.0.1:8008
  connect_address: 127.0.0.1:8008
#  certfile: /etc/ssl/certs/ssl-cert-snakeoil.pem
#  keyfile: /etc/ssl/private/ssl-cert-snakeoil.key
#  authentication:
#    username: username
#    password: password

etcd:
  #Provide host to do the initial discovery of the cluster topology:
  host: 172.19.0.4:2379
  #Or use "hosts" to provide multiple endpoints
  #Could be a comma separated string:
  #hosts: host1:port1,host2:port2
  #or an actual yaml list:
  #hosts:
  #- host1:port1
  #- host2:port2
  #Once discovery is complete Patroni will use the list of advertised clientURLs
  #It is possible to change this behavior through by setting:
  #use_proxies: true

bootstrap:
    dcs:
        ttl: 30
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
            use_pg_rewind: true

    postgresql:
      use_pg_rewind: true

    initdb:
    - encoding: UTF8
    - data-checksums

    pg_hba:
    - host replication all all md5
    - host all all all md5
    # users:
    #     postgres:
    #         password: postgres
    #         options:
    #             - createrole
    #             - createdb

# zookeeper:
#   hosts: 
#       - zoo1:2181
#       - zoo2:2181
#       - zoo3:2181

postgresql:
    data_dir: /data/patroni
    bin_dir: /usr/pgsql-14/bin
#  config_dir:
    pgpass: /tmp/pgpass
    # authentication:
    #     replication:
    #         username: replicator
    #         password: rep-pass
    #     superuser:
    #         username: postgres
    #         password: postgres
    #     rewind:  # Has no effect on postgres 10 and lower
    #         username: rewind_user
    #         password: rewind_password
    # Server side kerberos spn
    #  krbsrvname: postgres
    parameters:
        # Fully qualified kerberos ticket file for the running user
        # same as KRB5CCNAME used by the GSS
    #   krb_server_keyfile: /var/spool/keytabs/postgres
        unix_socket_directories: '.'
    # Additional fencing script executed after acquiring the leader lock but before promoting the replica
    #pre_promote: /path/to/pre_promote.sh
tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false