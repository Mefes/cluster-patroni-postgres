version: "3"
networks:
    mdm-network: 
        external: true

services:
    # nginx:
    #     image: patronitraining/patroni
    #     networks: [ mdm-network ]
    #     hostname: nginx
    #     container_name: nginx
    #     ports:
    #         - "5000:5000"
    #         - "5001:5001"
    #     command: nginx
    #     environment: &nginx_env
    #         PATRONI_SCOPE: demo
    #         PATRONI_ETCD_HOSTS: "'etcd:2379'"
    #         PATRONI_RESTAPI_USERNAME: admin
    #         PATRONI_RESTAPI_PASSWORD: admin
    #         ETCDCTL_ENDPOINTS: http://etcd:2379
    patroni1:
        build: ./patroni
        networks:  
            mdm-network:
                ipv4_address: 172.19.0.2
        ports:
            - 5441:5432
            - 8091:8091
        hostname: patroni1
        volumes:
          - /patroni1:/data/patroni
        environment:
            PATRONI_API_CONNECT_PORT: 8091
            REPLICATION_NAME: replicator 
            REPLICATION_PASS: replpass
            SU_NAME: postgres
            SU_PASS: postgres
            POSTGRES_APP_ROLE_PASS: appass
        deploy:
          replicas: 1
          placement:
            constraints: [node.hostname == floitet]
    patroni2:
        build: ./patroni
        networks:  
            mdm-network:
                ipv4_address: 172.19.0.3
        ports:
            - 5442:5432
            - 8092:8091
        hostname: patroni2
        volumes:
          - /patroni2:/data/patroni
        environment:
            PATRONI_API_CONNECT_PORT: 8091
            REPLICATION_NAME: replicator 
            REPLICATION_PASS: replpass
            SU_NAME: postgres
            SU_PASS: postgres
            POSTGRES_APP_ROLE_PASS: appass
        deploy:
          replicas: 1
          placement:
            constraints: [node.hostname == floitet]